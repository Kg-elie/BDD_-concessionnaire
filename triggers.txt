
--1. Trigger pour mettre à jour la date de retrait lorsqu'un véhicule est vendu du stock :
-------
CREATE OR REPLACE TRIGGER trg_maj_date_retrait
AFTER DELETE ON Stockage
FOR EACH ROW
BEGIN
   UPDATE Stockage SET date_retrait = SYSDATE WHERE Id_vehicule = :OLD.Id_vehicule;
END;
/


-- 2.Trigger pour mettre à jour la date de retrait lorsqu'un véhicule est repris du stock :
-------
CREATE OR REPLACE TRIGGER trg_maj_date_retrait
AFTER insert update ON reprise
FOR EACH ROW
BEGIN
   UPDATE Stockage SET date_retrait = SYSDATE WHERE Id_vehicule = :OLD.Id_vehicule;
END;
/
-------
3.
CREATE OR REPLACE TRIGGER vente_check_vendeur
BEFORE INSERT OR UPDATE ON Vente
FOR EACH ROW
DECLARE
    v_count NUMBER;
BEGIN
    IF :NEW.mat_vendeur IS NOT NULL THEN
        -- Vérifier si le matricule du vendeur correspond à un employé ayant la fonction 'vendeur'
        SELECT COUNT(*)
        INTO v_count
        FROM occupe
        WHERE Matricule = :NEW.mat_vendeur AND fonction = 'Vendeur';

        IF v_count = 0 THEN
            RAISE_APPLICATION_ERROR(-20001, 'Le matricule du vendeur doit correspondre à un employé ayant la fonction vendeur.');
        END IF;
    END IF;
END;
-------
4.
CREATE OR REPLACE TRIGGER reprise_check_vendeur
BEFORE INSERT OR UPDATE ON reprise
FOR EACH ROW
DECLARE
    v_count NUMBER;
BEGIN
    IF :NEW.mat_vendeur IS NOT NULL THEN
        -- Vérifier si le matricule du vendeur correspond à un employé ayant la fonction 'Vendeur'
        SELECT COUNT(*)
        INTO v_count
        FROM occupe
        WHERE Matricule = :NEW.mat_vendeur AND fonction = 'Vendeur';

        IF v_count = 0 THEN
            RAISE_APPLICATION_ERROR(-20001, 'Le matricule du vendeur doit correspondre à un employé ayant la fonction vendeur.');
        END IF;
    END IF;
END;
-------
5. 
CREATE OR REPLACE TRIGGER check_anciennete_trigger
BEFORE INSERT OR UPDATE ON Concessionnaire
FOR EACH ROW
DECLARE
    anciennete NUMBER;
BEGIN
    SELECT 2024 - EXTRACT(YEAR FROM debut)
    INTO anciennete
    FROM occupe
    WHERE Matricule = :NEW.mat_responsable;
    IF anciennete < 4 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Le responsable du concessionnaire doit avoir au moins 4 ans d''ancienneté.');
    END IF;
END;
